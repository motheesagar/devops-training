AWS:

Day 1:
Login
--------------------------------------------------------------------------------------
Day 2:
Region -> Availability zone -> Regional Edge caches -> Edge Point of Presence

Choosing a region -> Analyse restrictions -> Choose closest region to user or allowed region
-----------------------------------------------------------------------------
Day 3:
EC2 - Elastic Cloud Computing:
Ec2 is Virtual machine. Which is also called Server or Instance

Name and Tags - Key value pair. Upto 50 pairs.

AMI - AMazon Machine Image: OS Image with pre installed software

Instance type - Choosing system (CPU + RAM + Network Performance)

General Purpose
Compute Optimized - Ex:Video encoding
Storage Optimized - Huge Data, Ex:Database
Memory Optimized - Cache projects
Accelerated Computing -> High end calculative projects - Ex:Banking and Finance
HPC -> High Performance Computing -> Good Performance but expensive
------------------------------------------------------------------------------------------
Day 4:
Key pair:
To securely connect to your instance.

When Key pair is generated. 2 Keys are created. Public and Private. Aws wi;; have Public Key and User will have private key(.pem).

Network Settings:
Make sure SSH Traffic is allowed in firewall

Configure Storage:
Choose storage

How many ways to connect the instance?
1. AWS UI
2. CLI -> CMD, Powershell or Cloudshell
3. Putty
4. Programmical way (Python)

For Linux machine:
Download the .pem or.ppk file as required.
CMD:
Go to folder of Key Pair -> Open Terminal -> type "SSH -i "Key pair.pem" Username@ipaddress (public DNS)
.pem - Private enhabced market
.ppk - Putty private key

Cloudshell:
Must upload KeyPair from actions

Putty:
THird party tool to connect instance
Uses .ppk file as kep pair
Download Putty and Putty Gen (used to convert .pem to .ppk)
Run Putty
Session->Hostname ---> Paste DNS IP Address
Connection->SSH->Credentials-> Private Key for Authentication ----> Upload .ppk file
Click Open
CLick Accept

Using Putty Gem:
Load - Upload .pem by selecting all files
Save private key
select without
Use new name for key

For Windows instance:
Download RDP

Storage:
For EC2 we get default storage aka ephimeral storage. (Faster but not reliable)
They are tightly coupled
eg: RAM

EBS Elastic Block Storage Aka Volumes:
Persistant, HDD. They are loosely coupled. Cannot connect if Instance and Volume is in different availability zones.

In UI -> Search -> Volume -> Create a Volume

Types of Volumes:
Magnetic, Obsolete
HDD:
>Cold Data - Infrequent access
>Throughput(Hot Data) - Frequently accessed data
>>> Throughput is synonymous with transfer speed
SSD:
High performance. high cost.
>General Purpose:
When stable and low to medium level user traffic. 3 IOPS per GB.

>Provisioned IOPS Input Output Per Second. Most expensive. 50 IOPS per GB.
When high and unstable traffic is expected. 

IOPS-> Number of input and output per second.

Choose availability zone.

Go to Volumes and Name the Volume.
Actions -> Attach Volume

SSH is for Backend
HTTPS is for frontend
HTTP


How to install (LAMP)apache server:
Go to putty
Switch user to root user - sudo su
Update packages - sudo yum update -y (YUM - Yellowdog Unified Modular)
install apache - sudo yum install httpd -y (Httpd - Apache)
start server - sudo systemctl start httpd
enable server - sudosystemctl enable httpd
Check status - sudo systemctl status httpd
proof - copy machine ip address and paste in browser. it will show "It works!"

Linux machine best for Tools
Linux uses Open Source Connect. Open source connect means connect using Command Prompt.
Companies that use Data models will prefer windows machine.

Day 6:
Elastic IP Address: 

Network and Security -> Elastic IPs -> Allocate Elastic IP Address -> Allocate
then
Go to Instances -> Actions -> Associate elastic IP Addresses -> Instance -> Choose Instance -> Select Private IP Address -> Associate

****Question - Is there any hidden cost for elastic IP Address****

Day 7:
Elastic Load Balancing:
3 types;
Application Load Balancer,
Network Load Balancer,
Classic Load balancer (App + Network)

Definition of Load Balancer:


VPC - Virtual Private Cloud
DNS - Domain Name Service

What is internet Gateway - Internet Gateway is to handle external traffic
Assignment
Create VPC
Create 2 Subnets (1 Private and 1 Public)
Create internet Gateway
Attach Internet Gateway to VPC
Create Route Table
Subnet Associations (Choose Public 1)
in Route table's routes, Add internet gateway as open source.
Choose public subnet
Choose our VPC
Create Linux Instance and edit network Settings
Enable auto assign public IP
Add Security group rule
1. add HTTP @anywhere
2. add HTTPS @anywhere
Create Windows Instance and follow last 4 steps
Take screenshots
Delete resources one by one


Advantage of VPC pairing if all ports open for all VM


VPC Peering:
Create 2 VPC
Create 2 Subnets for each

IAM:
Identity and Access Management

Go to IAM
Go to Users
Add users
Enter username
set perminssion boundary
check the box
search EC2 full access
check the option
next
create user
click on user
note control access is disabled
go to security credentioals
click enable control access
set custom password
Copy console sig in link
Login

To add permissions go to add permission and choose create inline policy

MFA:
also known as Secondary security Layer

Go to IAM console
Access management
assign MFA device
set device name
choose authenticator app
go to phone and download google authenticator app
and scan qr code in the pc screen
paste the phone's code in PC input box 1
scan again and paste in input box 2

Access Keys:
Access key and Secret access Key is like userid and password

Application running on an AWS Compute Service
Check the box
Next
Give description Tag
Create

Policy can be used to control all the services in aws
Role is nearly same as Policy.
Role is dependant on policy

User Group:
Create group
Name
Add manoj to group
use search and add VPC
add IAM

Note:
User Permissions will add Permission boundary and User group permissions

Account settings:
You can change the password policy here.
Click on custom.
This option is for Root User?

How to create custom password settings for Root users vs IAM users

MFA for Root User:
IAM > Security credentials
Here we can see Canonical User ID which is used for data migration.

Identity Providers:
2 options: SAMIL and OpenID Connect
Cannot use with Free tier account

Credential Report:
.csv report which tells us Access logs and User Creation Logs.

S3:
Simple storage service

Self Test:
Create a policy to deny all services
Create a policy to give ec2 full access
Attach both policy to a different groups
Add users to both groups

Assignment:
1. Create an IAM User, Give s3 policy access, login as the IAM user, go to te s3 and create and access a bucket.
2. Create and IAM user, give all access required for ec2 access, login as IAM user and create an EC2.

Assignment 1:
IAM:
Policy > Create
All ec2 actions
resource all
add service
s3
all actions
resource all
add service
iam:PassRole
iam:CreateServiceLinkedRole
route53:AssociateVPCWithHostedZone
organizations:DeregisterDelegatedAdministrator
organizations:EnableAWSServiceAccess
organizations:RegisterDelegatedAdministrator



Users > Create User
Name user 1
Set permissions boundar > Check box
Search S3 > Amazon S3 Full Access > Next
Create
Select User > Security Credentials > Enable Console Access > Custom Password > Save
Copy Console sign in link > Paste in another browser >

S3
Create bucket
Unique Name
ACLs enabled
Uncheck Bloack all...
Check I acknowledge....
Eanble bucket versioning
Create
From Buckets >Choose bucket
Choose permissions
ACLs > Edit
Check "List" and "Read" for "Everyone" and "I Understand..."
Save
Objects > Upload
Add files
Permissions
Specify
"Read" for "Everyone" and "I Understand"
Save

Route 53:
53 is port number
DNS - Domain Name Service
Website is sold by SOA, State of Authority through ISP Internet Service Provider.
Once we get the IP address from Route 53, we have to do select the CIDR Block for VPC based on that.

2 Types of DNS
Authorotative DNS
Recursive DNS

Record type:

sQs and sNs:
sQs is message to single person.
sNs is message to many.

Step 1: Create an IAM Role
Create SQS with IAM Role
Create SNS Topic
Create Subscription with SQS Enabled
Accept SNS Subscription in SQS
Send message from SNS
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

Devops:

DOCKER:
launch a linux ec2
sudo su
sudo yum update -y
sudo yum install docker -y

check docker version

docker -v or docker --version
sudo service docker start
sudo usermod -a -G docker ec2-user <or> sudo usermod -a -G docker "PC User Name"

search and find image name in docker hub
docker pull "Image name" (ex: docker pull alpine)
docker images
docker ps -a
docker run "Image name" (ex: docker run alpine)(attach image to a container)
docker rmi "image name" (ex docker rim alpine)(Remove unattached image)
docker rmi -f "image name" (ex: dockder rim -f alpine)(Remove containerized image)
docker rm "id" to remove container (id is the first 2 characters of your container id)docker

images ==== AMI
Containers ==== Instances
File ==== Steps to crete an AMI

Docker PORT FOWARDING:
sudo su
sudo yum update -y
sudo yum install -y docker
sudo service docker start
sudo usermod -a -G docker ec2-user
docker pull httpd
docker run -itd -p "9090:80" httpd

docker exec -it "container id" /bin/bash
cd htdocs
ls -lrt
cat index.html


apt-get update
apt install vim -y
vi index.html
(E) Edit anyway
Esc button ->!wq -> Enter
